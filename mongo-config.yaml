apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2023-11-13T17:00:13Z"
    generation: 4
    labels:
      app: mongo-docker
    name: mongo-docker
    namespace: default
    resourceVersion: "25275"
    uid: 36126a5f-a2f1-4815-ae34-d0fa001492dc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mongo-docker
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2023-11-13T22:34:14+05:30"
        creationTimestamp: null
        labels:
          app: mongo-docker
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: password
          image: mongo:latest
          imagePullPolicy: Always
          name: mongo
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-11-13T17:00:32Z"
      lastUpdateTime: "2023-11-13T17:00:32Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-11-13T17:00:13Z"
      lastUpdateTime: "2023-11-13T17:04:16Z"
      message: ReplicaSet "mongo-docker-bd89f95dc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2023-11-13T17:03:54Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: mongo-docker
    name: mongo-docker
    namespace: default
    resourceVersion: "25360"
    uid: a6a3464e-8525-405c-b4aa-4597e067e8f1
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.16.8.149
    clusterIPs:
    - 10.16.8.149
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30135
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      app: mongo-docker
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 34.71.67.10
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
